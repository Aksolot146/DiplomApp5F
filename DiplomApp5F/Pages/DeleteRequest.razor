@page "/request/delete/{id:int}"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using DiplomApp5F.Models
@using DiplomApp5F.Services
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthService authService

@if (userProfile != null && (userProfile.RankId == 1 || userProfile.RankId == 3))
{
    <h3>Удаление заявки</h3>
    <p>Продолжить (заявка будет удалена)?</p>
    @*@<input @bind="Id" />*@
    <Button Name="Да" Width="100" OnClick="DeleteAction" HasActive="true"></Button>
    <Button Name="Нет" Width="100" OnClick="Back" HasActive="true"></Button>
}
else
{
    <p>Недостаточно прав для просмотра. Обратитесь к администратору системы.</p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private CurrentUser currentUser;
    private UserProfile userProfile;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await authService.GetCurrentUserAsync();
        userProfile = new UserProfile();
        if (currentUser.Id > 0)
            userProfile = await Http.GetFromJsonAsync<UserProfile>($"https://localhost:44395/api/userprofiles/{currentUser.ProfileId}");
    }

    private async Task RemoveRequest() =>
        await Http.DeleteAsync($"https://localhost:44395/api/requests/{Id}");

    private void Back()
    {
        navigationManager.NavigateTo($"https://localhost:44351/request");
    }

    private async Task DeleteAction()
    {
        await RemoveRequest();
        Back();
    }
}
