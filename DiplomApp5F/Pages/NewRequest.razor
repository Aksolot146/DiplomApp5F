@page "/request/add"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using DiplomApp5F.Models
@using DiplomApp5F.Services
@using Microsoft.Extensions.Logging;
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ILogger<NewRequest> Logger
@inject AuthService authService

@if (userProfile != null && (userProfile.RankId == 1 || userProfile.RankId == 3))
{
    <h3>Новая заявка</h3>

    <EditForm EditContext="@editContext" OnValidSubmit="@AddAction">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h6>Тема</h6>
        @*<InputText id="Title" @bind-Value="addRequest.Title" placeholder="Title" />*@
        @if (requestTitles != null)
        {
            <InputSelect id="Title" @bind-Value="title">
                @foreach (var requestTitle in requestTitles)
                        {
                    <option value="@requestTitle.Id">@requestTitle.Titlename</option>
                        }
            </InputSelect>
        }
        <br />
        <h6>Изготовитель</h6>
        @*InputText id="Vendor" @bind-Value="addRequest.Vendor" placeholder="Vendor" />*@
        @if (requestVendors != null)
        {
            <InputSelect id="Vendor" @bind-Value="vendor">
                @foreach (var requestVendor in requestVendors)
                        {
                            if (requestVendor.TitleId == title || requestVendor.TitleId == 1)
                            {<option value="@requestVendor.Id">@requestVendor.Vendorname</option>}
                            }
            </InputSelect>
        }
        <br />
        <h6>Модель</h6>
        @*<InputText id="Model" @bind-Value="addRequest.Model" placeholder="Model" />*@
        @if (requestModels != null)
        {
            <InputSelect id="Model" @bind-Value="model">
                @foreach (var requestModel in requestModels)
                        {
                            if (requestModel.VendorId == vendor || requestModel.VendorId == 1)
                            {<option value="@requestModel.Id">@requestModel.Modelname</option>}
                            }
            </InputSelect>
        }
        <br />
        <h6>Серийный номер</h6>
        @*<InputText id="PartNumber" @bind-Value="addRequest.PartNumber" placeholder="Part number" />*@
        @if (requestModels != null)
        {
            <InputSelect id="PartNumber" @bind-Value="partnumber">
                @foreach (var requestPartNumber in requestPartNumbers)
                        {
                            if (requestPartNumber.ModelId == model || requestPartNumber.ModelId == 1)
                            {<option value="@requestPartNumber.Id">@requestPartNumber.PMname</option>}
                            }
            </InputSelect>
        }
        <br />
        <InputText id="Description" @bind-Value="addRequest.Description" placeholder="Описание" />
        <br />
        <h6>Выполнить до</h6>
        <InputDate id="Deadline" @bind-Value="addRequest.Deadline" />
        <br />

        <h6>Выберите специалиста по решению проблемы</h6>
        @if (userProfiles != null)
        {
            <InputSelect id="ProfileId" @bind-Value="addRequest.ProfileId">
                @foreach (var userProfile in userProfiles)
                        {
                    @if (userProfile.RankId == 2)
                            {
                        <option value="@userProfile.Id">@userProfile.Nickname</option>
                            }
                        }
            </InputSelect>
        }
        <br />

        <Button Type="submit" Name="Добавить" Width="100" />
        <Button Type="button" Name="Отмена" Width="100" OnClick="Back" HasActive="true"></Button>
    </EditForm>
}
else
{
    <p>Недостаточно прав для просмотра. Обратитесь к администратору системы.</p>
}

@code {
    private EditContext editContext;
    private IEnumerable<UserProfile> userProfiles;
    private IEnumerable<RequestTitle> requestTitles;
    private IEnumerable<RequestVendor> requestVendors;
    private IEnumerable<RequestModel> requestModels;
    private IEnumerable<RequestPartNumber> requestPartNumbers;
    private int title;
    private int vendor;
    private int model;
    private int partnumber;
    private Request addRequest = new Request();

    private CurrentUser currentUser;
    private UserProfile userProfile;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await authService.GetCurrentUserAsync();
        userProfile = new UserProfile();
        if (currentUser.Id > 0)
            userProfile = await Http.GetFromJsonAsync<UserProfile>($"https://localhost:44395/api/userprofiles/{currentUser.ProfileId}");

        editContext = new(addRequest);
        addRequest.Deadline = DateTime.Now;
        userProfiles = await Http.GetFromJsonAsync<IEnumerable<UserProfile>>("https://localhost:44395/api/userprofiles");
        requestTitles = await Http.GetFromJsonAsync<IEnumerable<RequestTitle>>("https://localhost:44395/api/requesttitles");
        requestVendors = await Http.GetFromJsonAsync<IEnumerable<RequestVendor>>("https://localhost:44395/api/requestvendors");
        requestModels = await Http.GetFromJsonAsync<IEnumerable<RequestModel>>("https://localhost:44395/api/requestmodels");
        requestPartNumbers = await Http.GetFromJsonAsync<IEnumerable<RequestPartNumber>>("https://localhost:44395/api/requestpartnumbers");
    }

    private async Task AddRequest()
    {
        foreach (var requestTitle in requestTitles)
        {
            if (requestTitle.Id == title) addRequest.Title = requestTitle.Titlename;
        }
        foreach (var requestVendor in requestVendors)
        {
            if (requestVendor.Id == vendor) addRequest.Vendor = requestVendor.Vendorname;
        }
        foreach (var requestModel in requestModels)
        {
            if (requestModel.Id == model) addRequest.Model = requestModel.Modelname;
        }
        foreach (var requestPartNumber in requestPartNumbers)
        {
            if (requestPartNumber.Id == partnumber) addRequest.PartNumber = requestPartNumber.PMname;
        }
        foreach (var userProfile in userProfiles)
        {
            if (currentUser.ProfileId == userProfile.Id) addRequest.RequesterId = userProfile.Id;
        }
        if (title < 2 || vendor < 2 || model < 2 || partnumber < 2)
            Back();
        else await Http.PostAsJsonAsync("https://localhost:44395/api/requests", addRequest);
    }

    private void Back()
    {
        navigationManager.NavigateTo("https://localhost:44351/request");
    }

    private async Task AddAction()
    {
        if (editContext != null && editContext.Validate())
        {
            await AddRequest();
            Back();
        }
    }
}
